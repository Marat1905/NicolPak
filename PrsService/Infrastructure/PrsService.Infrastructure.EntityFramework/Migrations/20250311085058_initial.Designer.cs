// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrsService.Infrastructure.EntityFramework.Context;

#nullable disable

namespace PrsService.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(PrsServiceContext))]
    [Migration("20250311085058_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("PrsService.Domain.Entities.Production", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("AverageSpeed")
                        .HasColumnType("REAL");

                    b.Property<double>("AverageTension")
                        .HasColumnType("REAL");

                    b.Property<int>("Core")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("FactDiameter")
                        .HasColumnType("REAL");

                    b.Property<double>("FactLength")
                        .HasColumnType("REAL");

                    b.Property<double>("PaperWeight")
                        .HasColumnType("REAL");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("SetDiameter")
                        .HasColumnType("REAL");

                    b.Property<double>("SetLength")
                        .HasColumnType("REAL");

                    b.Property<int>("Shift")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TamburPrsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TamburPrsId");

                    b.ToTable("Productions", (string)null);
                });

            modelBuilder.Entity("PrsService.Domain.Entities.Roll", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("RollID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("RollWidth")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ProductionId");

                    b.ToTable("Rolls", (string)null);
                });

            modelBuilder.Entity("PrsService.Domain.Entities.TamburPrs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("End")
                        .HasColumnType("TEXT");

                    b.Property<int>("TamburContPrs")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tamburs", (string)null);
                });

            modelBuilder.Entity("PrsService.Domain.Entities.Production", b =>
                {
                    b.HasOne("PrsService.Domain.Entities.TamburPrs", "TamburPrs")
                        .WithMany("Productions")
                        .HasForeignKey("TamburPrsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TamburPrs");
                });

            modelBuilder.Entity("PrsService.Domain.Entities.Roll", b =>
                {
                    b.HasOne("PrsService.Domain.Entities.Production", "Production")
                        .WithMany("Rolls")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Production");
                });

            modelBuilder.Entity("PrsService.Domain.Entities.Production", b =>
                {
                    b.Navigation("Rolls");
                });

            modelBuilder.Entity("PrsService.Domain.Entities.TamburPrs", b =>
                {
                    b.Navigation("Productions");
                });
#pragma warning restore 612, 618
        }
    }
}
